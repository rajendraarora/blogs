I"‰<h1 id="goroutines">Goroutines</h1>

<p>A Goroutine is a lightweight thread managed by the Go runtime. A Goroutine is a function or method which executes independently and simultaneously in a connection with any other Goroutine present in our program.
<br /></p>

<p>In other word, Goroutines are functions/methods that run concurrently with other functions/methods.</p>

<h1 id="how-to-create-a-goroutines">How to create a Goroutines?</h1>

<p>We can create our own Goroutine by simply using <code class="language-plaintext highlighter-rouge">go</code> keyword as prefex to the function or method.</p>

<figure class="highlight"><pre><code class="language-go" data-lang="go"><span class="k">go</span> <span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">)</span></code></pre></figure>

<p><code class="language-plaintext highlighter-rouge">f(x, y, z)</code> will start new goroutine runnning.</p>

<p><br /></p>

<p>I will go over basics to a complex example to understand more on examples. So letâ€™s start with basics..</p>

:ET