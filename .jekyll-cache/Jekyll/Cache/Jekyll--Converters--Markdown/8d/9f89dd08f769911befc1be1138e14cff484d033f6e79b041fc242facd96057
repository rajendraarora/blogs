I"f<p><br /></p>
<p algin="center">
    <img src="/assets/img/deno_icon.png" data-canonical-src="/assets/img/deno_icon.png" style="height: 50px;width: 50px;" />
</p>

<h1 id="what-is-deno">What is Deno?</h1>

<p>As per the <a href="https://github.com/denoland/deno">definition</a>, deno is a simple, modern and secure runtime for Javascript and Typescript which is built on V8, Rust and <a href="https://tokio.rs/">Tokio</a>.</p>

<h1 id="feature">Feature</h1>

<ul>
  <li>Supports Typescript</li>
  <li>Ships a single executable</li>
  <li>Has built-in utilities like a code formatter (<code class="language-plaintext highlighter-rouge">deno fmt</code>), a linter (<code class="language-plaintext highlighter-rouge">deno lint</code>), and a test runner (<code class="language-plaintext highlighter-rouge">deno test</code>).</li>
  <li>Can bundle scripts into a single JavaScript file.</li>
  <li>Set of reviewed standard modules that are guaranteed to work with <a href="https://deno.land/std">Deno</a>.</li>
</ul>

<h1 id="how-to-download-deno">How to download Deno?</h1>

<p>You can download from the <a href="https://deno.land/">official website</a>.</p>

<h1 id="hello-world-with-deno">Hello World with Deno!</h1>

<p>Deno runs on Typescript, no additional config tools like webpack or bundle is required to compile. We can use both Javascript or Typescript with Deno.</p>

<p>I will be using Typescript to run a simple program:</p>

<figure class="highlight"><pre><code class="language-typescript" data-lang="typescript"><span class="cm">/**
 * Hello-world.ts
 */</span>

<span class="kd">function</span> <span class="nx">capitalize</span><span class="p">(</span><span class="nx">word</span><span class="p">:</span> <span class="kr">string</span><span class="p">):</span> <span class="kr">string</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">word</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">word</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">hello</span><span class="p">(</span><span class="nx">name</span><span class="p">:</span> <span class="kr">string</span><span class="p">):</span> <span class="kr">string</span> <span class="p">{</span>
    <span class="k">return</span> <span class="s2">`Hello </span><span class="p">${</span><span class="nx">capitalize</span><span class="p">(</span><span class="nx">name</span><span class="p">)}</span><span class="s2">`</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">hello</span><span class="p">(</span><span class="dl">'</span><span class="s1">raj</span><span class="dl">'</span><span class="p">));</span>

<span class="cm">/*
Output:

Hello Raj
*/</span></code></pre></figure>

<p><br />
<br /></p>
:ET